---
- name: "Install samba package"
  apt:
    name: samba

- name: "Push samba config"
  template:
    src: "roles/samba/templates/smb.conf.j2"
    dest: "/etc/samba/smb.conf"
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  notify: "Reboot samba that smb.conf changes to apply"

- name: "Ensure Windows limit (16384)"
  lineinfile:
    path: "/etc/security/limits.conf"
    regexp: "-       nofile          16384$"
    insertbefore: "^# End of file"
    line: "*                -       nofile          16384"
  notify: "Reboot a machine that file changes to apply (/etc/security/limits.conf)"

- name: "Create groups"
  group:
    name: "{{ item.1.name }}"
    state: "{{ item.1.params.grp_state }}"
  loop: "{{ group_dict | dict2items | subelements('value.settings') }}"

- name: "Create folders"
  file:
    path: "{{ path_to_mount_raid }}/{{ item.1.name }}"
    owner: "{{ item.1.params.owner }}"
    group: "{{ item.1.name }}"
    mode: "{{ item.1.params.mode }}"
    state: "{{ item.1.params.folder_state }}"
  loop: "{{ group_dict | dict2items | subelements('value.settings') }}"

- name: "Create users"
  user:
    name: "{{ item.key }}"
    comment: "{{ item.value.description }}"
    shell: /usr/sbin/nologin
    groups: "{{ item.value.grps | list }}"
    home: "{{ path_to_mount_raid }}/users_private/{{ item.key }}"
    state: "{{ item.value.state }}"
    expires: 1422403387
  loop: "{{ lookup('dict', users) }}"

- name: "Sets default ACL"
  acl:
    path: "{{ path_to_mount_raid }}/{{ item.1.name }}"
    entity: "{{ item.1.name }}"
    etype: group
    permissions: rw
    default: yes
    state: "{{ item.1.params.acl_state }}"
  loop: "{{ group_dict | dict2items | subelements('value.settings') }}"

- name: "Samba: set a password and enable users"
  shell: "(echo {{ item.value.smbpassword }}; echo {{ item.value.smbpassword }}) | smbpasswd -s -a {{ item.key }}"
  loop: "{{ lookup('dict', users) }}"

- name: "Enable samba user"
  command: "smbpasswd -e {{ item.key }}"
  loop: "{{ users | dict2items }}"
  when: item.value.enabled == "yes"

- name: "Disable samba user"
  command: "smbpasswd -d {{ item.key }}"
  loop: "{{ users | dict2items }}"
  when: item.value.enabled == "no"
